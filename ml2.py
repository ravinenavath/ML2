# -*- coding: utf-8 -*-
"""ML2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-5JTsi_IgQUPwA3x47I3jr5-bp5eXl9U
"""

#classification teqnic-Logistic regression
#Data set -IRIS data set

# step1 take the data and create the dataframe
import pandas as pd
df=pd.read_csv('/content/IRIS.csv')
df

df.info()

#4.output-species
#input-sepal length,sepal width,petal length and petal width
#4. divide the data into input and output

x=df.iloc[:,0:4].values
x

y=df.iloc[:,4].values
y

#5. train test variables-train test-split
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0)

#after train_test_split
#training variable gets 75% of data from x,y
# testing variable gets 25% data of x,y
print(x.shape)
print(x_train.shape)
print(x_test.shape)

print(y.shape)#100%
print(y_train.shape)#75%
print(y_test.shape)#25%

#Normalisation or scaling is not required because my data is already scaled
#7. run a classifier-logistic regressor or clusterer

from sklearn.linear_model import LogisticRegression
model=LogisticRegression()

#8.fit the model
model.fit(x_train,y_train)#using the train data ,we train the the model

#9.predict the output
y_pred=model.predict(x_test)#using testing data we predict output
y_pred

y_test#actual output values

#accuracy
from sklearn.metrics import accuracy_score
accuracy_score(y_pred,y_test,)*100

#individual prediction
model.predict([[4.7,3.2,1.3,0.2]])

model.predict([[5.0,3.4,1.5,0.2]])